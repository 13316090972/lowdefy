// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render default 1`] = `
<div
  className="{}"
  id="default"
>
  <div
    className="markdown-body"
  />
</div>
`;

exports[`Render properties.content = table 1`] = `
<div
  className="{}"
  id="properties.content = table"
>
  <div
    className="markdown-body"
  >
    <h3>
      Table
    </h3>
    <table>
      <thead>
        <tr>
          <th
            style={
              Object {
                "textAlign": "right",
              }
            }
          >
            A
          </th>
          <th
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            B
          </th>
          <th
            style={
              Object {
                "textAlign": "left",
              }
            }
          >
            C
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td
            style={
              Object {
                "textAlign": "right",
              }
            }
          >
            one
          </td>
          <td
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            two
          </td>
          <td
            style={
              Object {
                "textAlign": "left",
              }
            }
          >
            three
          </td>
        </tr>
        <tr>
          <td
            style={
              Object {
                "textAlign": "right",
              }
            }
          >
            123
          </td>
          <td
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            345
          </td>
          <td
            style={
              Object {
                "textAlign": "left",
              }
            }
          >
            34892
          </td>
        </tr>
        <tr>
          <td
            style={
              Object {
                "textAlign": "right",
              }
            }
          >
            true
          </td>
          <td
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            false
          </td>
          <td
            style={
              Object {
                "textAlign": "left",
              }
            }
          >
            none
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Render properties.content 1`] = `
<div
  className="{}"
  id="properties.content"
>
  <div
    className="markdown-body"
  >
    <h1>
      One Heading
    </h1>
    <p>
      A paragraph with 
      <em>
        emphasis
      </em>
       and 
      <strong>
        strong importance
      </strong>
      .
    </p>
    <blockquote>
      <p>
        A block quote with 
        <del>
          strikethrough
        </del>
         and a URL: 
        <a
          href="https://reactjs.org"
        >
          https://reactjs.org
        </a>
        .
      </p>
    </blockquote>
    <h1>
      Two
    </h1>
    <ul>
      <li>
        Lists
      </li>
      <li>
        <input
          checked={false}
          readOnly={true}
          type="checkbox"
        />
        todo
      </li>
      <li>
        <input
          checked={true}
          readOnly={true}
          type="checkbox"
        />
        done
      </li>
    </ul>
    <p>
      A table:
    </p>
    <table>
      <thead>
        <tr>
          <th>
            a
          </th>
          <th>
            b
          </th>
        </tr>
      </thead>
    </table>
  </div>
</div>
`;

exports[`Render properties.content with code 1`] = `
<div
  className="{}"
  id="properties.content with code"
>
  <div
    className="markdown-body"
  >
    <h3>
      Code
    </h3>
    <p>
      Default
    </p>
    <pre>
      <code>
          &lt;a href=""&gt;Default style&lt;/a&gt;
      </code>
    </pre>
    <p>
      Html
    </p>
    <pre>
      <code
        className="language-html"
      >
          &lt;a href=""&gt;html style&lt;/a&gt;
      </code>
    </pre>
    <p>
      Json
    </p>
    <pre>
      <code
        className="language-json"
      >
          {
    "obj": "one",
    "list": [
      1,
      2
    ]
  }
      </code>
    </pre>
  </div>
</div>
`;

exports[`Render properties.skipHtml = false 1`] = `
<div
  className="{}"
  id="properties.skipHtml = false"
>
  <div
    className="markdown-body"
  >
    <h3>
      Link
    </h3>
    <p>
      &lt;a href="https://lowdefy.com"&gt;
      Lowdefy link
      &lt;/a&gt;
    </p>
    <p>
      &lt;font size="+10"&gt;
      Description
      &lt;/font&gt;
    </p>
    <h3>
      Bad HTML
    </h3>
    &lt;div onmouseover="alert('alpha')"&gt;
  &lt;a href="javascript:alert('bravo')"&gt;delta&lt;/a&gt;
  &lt;img src="x" onerror="alert('charlie')"&gt;
  &lt;iframe src="javascript:alert('delta')"&gt;&lt;/iframe&gt;
  &lt;math&gt;
    &lt;mi xlink:href="data:x,&lt;script&gt;alert('echo')&lt;/script&gt;"&gt;&lt;/mi&gt;
  &lt;/math&gt;
&lt;/div&gt;
&lt;script&gt;
require('child_process').spawn('rm', ['-r', '-f', process.env.HOME]);
&lt;/script&gt;
  </div>
</div>
`;

exports[`Render properties.skipHtml = true 1`] = `
<div
  className="{}"
  id="properties.skipHtml = true"
>
  <div
    className="markdown-body"
  >
    <h3>
      Link
    </h3>
    <p>
      Lowdefy link
    </p>
    <p>
      Description
    </p>
    <h3>
      Bad HTML
    </h3>
  </div>
</div>
`;

exports[`Render properties.style and headings 1`] = `
<div
  className="{\\"style\\":{\\"border\\":\\"1px solid blue\\"}}"
  id="properties.style and headings"
>
  <div
    className="markdown-body"
  >
    <h1>
      One
    </h1>
    <h2>
      Two
    </h2>
    <h3>
      Three
    </h3>
    <h4>
      Four
    </h4>
    <h5>
      Five
    </h5>
    <h6>
      Six
    </h6>
  </div>
</div>
`;

exports[`Test Schema default 1`] = `true`;

exports[`Test Schema default 2`] = `null`;

exports[`Test Schema properties.content = table 1`] = `true`;

exports[`Test Schema properties.content = table 2`] = `null`;

exports[`Test Schema properties.content 1`] = `true`;

exports[`Test Schema properties.content 2`] = `null`;

exports[`Test Schema properties.content with code 1`] = `true`;

exports[`Test Schema properties.content with code 2`] = `null`;

exports[`Test Schema properties.skipHtml = false 1`] = `true`;

exports[`Test Schema properties.skipHtml = false 2`] = `null`;

exports[`Test Schema properties.skipHtml = true 1`] = `true`;

exports[`Test Schema properties.skipHtml = true 2`] = `null`;

exports[`Test Schema properties.style and headings 1`] = `true`;

exports[`Test Schema properties.style and headings 2`] = `null`;
