// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "default",
      "message": <div
        style={
          Object {
            "height": "1.5175em",
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.closable: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": true,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.closable: true",
      "message": <RenderHtml
        html="Message closable true"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.closeText: Close Text - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": true,
      "closeText": "Close Text",
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.closeText: Close Text",
      "message": <RenderHtml
        html="Message closable true"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.icon object - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "icon": <IconBlock
        blockId="properties.icon object_icon"
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "color": "red",
            "name": "SettingOutlined",
            "spin": true,
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon object",
      "message": <RenderHtml
        html="Message with Icon!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.icon string - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "icon": <IconBlock
        blockId="properties.icon string_icon"
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="CheckCircleOutlined"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon string",
      "message": <RenderHtml
        html="Message with Icon!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.message - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.message",
      "message": <RenderHtml
        html="Alert message - Completed!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: error - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: error",
      "message": <RenderHtml
        html="Alert message - error!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "error",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: error banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: error banner: true",
      "message": <RenderHtml
        html="Alert message - error!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "error",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: error showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: error showIcon: false",
      "message": <RenderHtml
        html="Alert message - error!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "error",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: info - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: info",
      "message": <RenderHtml
        html="Alert message - info!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "info",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: info banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: info banner: true",
      "message": <RenderHtml
        html="Alert message - info!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "info",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: info showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: info showIcon: false",
      "message": <RenderHtml
        html="Alert message - info!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "info",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: success - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: success",
      "message": <RenderHtml
        html="Alert message - success!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "success",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: success banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: success banner: true",
      "message": <RenderHtml
        html="Alert message - success!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "success",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: success showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: success showIcon: false",
      "message": <RenderHtml
        html="Alert message - success!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "success",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: warning - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: warning",
      "message": <RenderHtml
        html="Alert message - warning!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "warning",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: warning banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: warning banner: true",
      "message": <RenderHtml
        html="Alert message - warning!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "warning",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: warning showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "properties.type: warning showIcon: false",
      "message": <RenderHtml
        html="Alert message - warning!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "warning",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description only - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description only",
      "message": false,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description only and icon false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description only and icon false",
      "message": false,
      "onClose": [Function],
      "showIcon": false,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.closable: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": true,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.closable: true",
      "message": <RenderHtml
        html="Message closable true"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.closeText: Close Text - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": true,
      "closeText": "Close Text",
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.closeText: Close Text",
      "message": <RenderHtml
        html="Message closable true"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.icon object - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "icon": <IconBlock
        blockId="with description properties.icon object_icon"
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "color": "red",
            "name": "SettingOutlined",
            "spin": true,
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "with description properties.icon object",
      "message": <RenderHtml
        html="Message with Icon!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.icon string - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "icon": <IconBlock
        blockId="with description properties.icon string_icon"
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="CheckCircleOutlined"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "with description properties.icon string",
      "message": <RenderHtml
        html="Message with Icon!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.message - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.message",
      "message": <RenderHtml
        html="Alert message - Completed!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: error - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: error",
      "message": <RenderHtml
        html="Alert message - error!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "error",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: error banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: error banner: true",
      "message": <RenderHtml
        html="Alert message - error!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "error",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: error showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: error showIcon: false",
      "message": <RenderHtml
        html="Alert message - error!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "error",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: info - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: info",
      "message": <RenderHtml
        html="Alert message - info!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "info",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: info banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: info banner: true",
      "message": <RenderHtml
        html="Alert message - info!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "info",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: info showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: info showIcon: false",
      "message": <RenderHtml
        html="Alert message - info!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "info",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: success - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: success",
      "message": <RenderHtml
        html="Alert message - success!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "success",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: success banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: success banner: true",
      "message": <RenderHtml
        html="Alert message - success!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "success",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: success showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: success showIcon: false",
      "message": <RenderHtml
        html="Alert message - success!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "success",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: warning - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: warning",
      "message": <RenderHtml
        html="Alert message - warning!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "warning",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: warning banner: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": true,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: warning banner: true",
      "message": <RenderHtml
        html="Alert message - warning!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": "warning",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description properties.type: warning showIcon: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html="This is a description for the block."
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description properties.type: warning showIcon: false",
      "message": <RenderHtml
        html="Alert message - warning!"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": false,
      "type": "warning",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with description uses html - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        html=<div style="background:red;">
  Alert Description
</div>
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with description uses html",
      "message": false,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with message uses html - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "banner": undefined,
      "closable": undefined,
      "closeText": undefined,
      "description": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "id": "with message uses html",
      "message": <RenderHtml
        html=<div style="background:green;">
  Alert Message
</div>
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "onClose": [Function],
      "showIcon": true,
      "type": undefined,
    },
    Object {},
  ],
]
`;
