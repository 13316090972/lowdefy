// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "default_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties.title_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        html="Modal title"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: bodyStyle: border: 10px solid blue - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"style\\":{\\"border\\":\\"10px solid blue\\"},\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: bodyStyle: border: 10px solid blue_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "border": "10px solid blue",
                  },
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":{\\"border\\":\\"10px solid blue\\"},\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: cancelText: Text of the Cancel button - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Text of the Cancel button",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: cancelText: Text of the Cancel button_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: centered: true - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": true,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: centered: true_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: closable: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": false,
      "confirmLoading": undefined,
      "id": "properties: closable: false_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: footer: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "footer": null,
      "id": "properties: footer: false_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: mask: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: mask: false_modal",
      "mask": false,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: maskClosable: false - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: maskClosable: false_modal",
      "mask": true,
      "maskClosable": false,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: maskStyle: border: 10px solid blue - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: maskStyle: border: 10px solid blue_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"style\\":{\\"border\\":\\"10px solid blue\\"},\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  Object {
                    "border": "10px solid blue",
                  },
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"style\\":{\\"border\\":\\"10px solid blue\\"},\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: okText: Text of the OK button - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: okText: Text of the OK button_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Text of the OK button",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: width: 350px - 520px is default - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: width: 350px - 520px is default_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": 350,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: wrapperStyle: border: 10px solid blue - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: wrapperStyle: border: 10px solid blue_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  Object {
                    "border": "10px solid blue",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"style\\":{\\"border\\":\\"10px solid blue\\"}}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{\\"style\\":{\\"border\\":\\"10px solid blue\\"}}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties: zIndex: 1200 - 1000 is the default - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "properties: zIndex: 1200 - 1000 is the default_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": 1200,
    },
    Object {},
  ],
]
`;

exports[`Mock render - with html in title - value[0] - default 1`] = `
Array [
  Array [
    Object {
      "afterClose": [Function],
      "bodyStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "cancelButtonProps": undefined,
      "cancelText": "Cancel",
      "centered": false,
      "children": <div
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "closable": true,
      "confirmLoading": undefined,
      "id": "with html in title_modal",
      "mask": true,
      "maskClosable": true,
      "maskStyle": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
      "okButtonProps": undefined,
      "okText": "Ok",
      "okType": "primary",
      "onCancel": [Function],
      "onOk": [Function],
      "title": <RenderHtml
        html=<div style="color:green;">
  Modal Html Title
</div>
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                  Object {
                    "styleObjectOnly": true,
                  },
                ],
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{\\"options\\":{\\"styleObjectOnly\\":true}}",
                },
                Object {
                  "type": "return",
                  "value": "{}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "visible": false,
      "width": undefined,
      "wrapClassName": "{}",
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;
