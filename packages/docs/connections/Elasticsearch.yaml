# Copyright 2020-2021 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: Elasticsearch
    pageTitle: Elasticsearch
    section: Connections
    filePath: connections/Elasticsearch.yaml
    content:
      - id: markdown
        type: MarkdownWithCode
        properties:
          content: |
            ## Connections

            Connection types:
              - Elasticsearch

            ### Elasticsearch

            [`Elasticsearch`](https://www.elastic.co/elasticsearch/) is a distributed, RESTful search and analytics engine capable of addressing a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data for lightning fast search, fineâ€‘tuned relevancy, and powerful analytics that scale with ease.

            The Elasticsearch connection can be used to search for documents in your Elasticsearch cluster. Lowdefy integrates with Elasticsearch using the official [Node.js client from Elastic Co.](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/introduction.html), and provides direct access to the full query DSL supported by Elasticsearch.

            #### Properties
            - `node: string|string[]`: __Required__ - Elasticsearch node(s) to connect to.
            - `index: string`: The default index to query. You can also provide a per-request index to override this setting.
            - `auth: BasicAuth|CloudAuth`: The authentication data as an object, containing either basic auth credentials (as `username` and `password`), an API key (as `apiKey`), or Elastic Cloud credentials.
            - `maxRetries: number`: Max number of retries for each request.
            - `requestTimeout: number`: Max request timeout in milliseconds for each request.

            The connection accepts many more advanced configuration options. They will be passed to the Elasticsearch client verbatim, so check out the [configuration instructions](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/basic-config.html) provided by Elastic.

            #### Examples

            ###### Authenticated connection:
            ```yaml
            connections:
              - id: elasticsearch
                type: Elasticsearch
                properties:
                  node: ELASTICSEARCH_HOST
                  auth:
                    username: ELASTICSEARCH_USER
                    password: ELASTICSEARCH_PASSWORD
            ```
            Environment variables:
            ```
            LOWDEFY_SECRET_ELASTICSEARCH_HOST = http://localhost:9200
            LOWDEFY_SECRET_ELASTICSEARCH_USER = es
            LOWDEFY_SECRET_ELASTICSEARCH_PASSWORD = password
            ```

            ###### Unauthenticated connection with default index:
            ```yaml
            connections:
              - id: elasticsearch
                type: Elasticsearch
                properties:
                  node: ELASTICSEARCH_HOST
                  index: ELASTICSEARCH_INDEX
            ```
            Environment variables:
            ```
            LOWDEFY_SECRET_ELASTICSEARCH_HOST = http://localhost:9200
            LOWDEFY_SECRET_ELASTICSEARCH_INDEX = articles
            ```

            ## Requests

            Request types:
              - ElasticsearchSearch

            ### ElasticsearchSearch

            The `ElasticsearchSearch` request searches the Elasticsearch index.

            #### Properties
            - `query: object`: The Elasticsearch query, expressed in the [JSON Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html). If you need to pass custom request body attributes, you should wrap the query within another `query` property (in that case, the top-level `query` object will be used as `body`).
            - `aggs: object[]`: The [aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html) to request from the server.
            - `_source: string|string[]|boolean`: True or false to return the _source field or not, or a list of fields to return.
            - `_source_excludes: string|string[]`: A list of fields to exclude from the returned _source field.
            - `_source_includes: string|string[]`: A list of fields to extract and return from the _source field.
            - `allow_no_indices: boolean`: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes _all string or when no indices have been specified).
            - `allow_partial_search_results: boolean`: Indicate if an error should be returned if there is a partial search failure or timeout.
            - `analyzer: string`: The analyzer to use for the query string
            - `default_operator: string`: The default operator for query string query (AND or OR).
            - `df: string`: The field to use as default where no field prefix is given in the query string.
            - `from: number`: Starting offset.
            - `size: number`: Number of hits to return.
            - `index: string|string[]`: A comma-separated list of index names to search; use _all or empty string to perform the operation on all indices.
            - `lenient: boolean`: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored.
            - `scroll: string`: Specify how long a consistent view of the index should be maintained for scrolled search.
            - `sort: string|string[]`: A comma-separated list of <field>:<direction> pairs.

            The request accepts many more advanced configuration options. They will be passed to the Elasticsearch client verbatim, so check out the [available options](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/api-reference.html#_search) provided by Elastic.

            #### Examples

            ###### Fetch the first 10 matching documents.
            ```yaml
            requests:
              - id: fetch_docs
                type:  Elasticsearch
                connectionId: elasticsearch
                properties:
                  size: 10
                  query:
                    match_all: {}
            ```

            ###### Find a document with ID 42.
            ```yaml
            requests:
              - id: fetch_docs
                type:  Elasticsearch
                connectionId: elasticsearch
                properties:
                  size: 1
                  query:
                    term:
                      _id: 42
            ```

            ###### Fetch articles between yesterday and today, aggregate by author.
            ```yaml
            requests:
              - id: fetch_docs
                type:  Elasticsearch
                connectionId: elasticsearch
                properties:
                  size: 1
                  type: article
                  query:
                    range:
                      timestamp:
                        gte: now-1d/d
                        lt: now/d
                  aggs:
                    author_aggregation:
                      terms:
                        field: author
            ```
